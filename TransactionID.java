/*State Street Bank transaction ID generator programmed by Group 2 of CSCI 362 
This Java class is to be used by a separate test class to create a random 
24-digit transaction ID for a customer account.*/
public class TransactionID
{
    //Initialize char array of 62 elements.
    final private char[] digits = new char[62];

    //A no-argument constructor.
    public TransactionID()
    {
        //Three for loops to populate array with alphanumeric characters.
        int index = 0;
        for(char a = '0'; a <= '9'; a++)
        {
            this.digits[index++] = a;
        }
        index = 10;
        for(char b = 'A'; b <= 'Z'; b++)
        {
            this.digits[index++] = b;
        }
        index = 36;
        for(char c = 'a'; c <= 'z'; c++)
        {
            this.digits[index++] = c;
        }
    }

    //Accessor method used to obtain contents of digits array.
    public char[] getArray()
    {
        return this.digits;
    }

    //Method returns a random digit generated by random() method of Math class.
    public char randomCharDigit()
    {
        return digits[(int)Math.floor(Math.random() * digits.length)];
    }

    //Accessor method to assign a String variable for 24-digit transaction ID.
    public String getTransactionID()
    {
        //Initialize StringBuilder class object.
        StringBuilder result = new StringBuilder();
        for(int i = 0; i < 24; i++)//For loop to add 24 char values to String.
        {
            result.append(randomCharDigit());
        }
        return result.toString();//Returns toString method of StringBuilder class object.
    }
}//End of TransacationID class.